version: '3.8'

services:
  # MongoDB Primary
  mongodb-primary:
    image: mongo:7.0
    container_name: nestcms-mongo-primary
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: nestcms
    volumes:
      - mongodb_primary_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    command: mongod --replSet nestcms-rs --bind_ip_all
    networks:
      - nestcms-network

  # MongoDB Read Replica 1
  mongodb-replica1:
    image: mongo:7.0
    container_name: nestcms-mongo-replica1
    restart: unless-stopped
    ports:
      - "27018:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
    volumes:
      - mongodb_replica1_data:/data/db
    command: mongod --replSet nestcms-rs --bind_ip_all
    depends_on:
      - mongodb-primary
    networks:
      - nestcms-network

  # MongoDB Read Replica 2
  mongodb-replica2:
    image: mongo:7.0
    container_name: nestcms-mongo-replica2
    restart: unless-stopped
    ports:
      - "27019:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
    volumes:
      - mongodb_replica2_data:/data/db
    command: mongod --replSet nestcms-rs --bind_ip_all
    depends_on:
      - mongodb-primary
    networks:
      - nestcms-network

  # Redis Cache
  redis:
    image: redis:7.2-alpine
    container_name: nestcms-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    environment:
      REDIS_PASSWORD: redis123
    command: redis-server --requirepass redis123 --maxmemory 512mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    networks:
      - nestcms-network

  # Redis Commander (Optional - for Redis management)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: nestcms-redis-commander
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      REDIS_HOSTS: local:redis:6379:0:redis123
    depends_on:
      - redis
    networks:
      - nestcms-network

  # MongoDB Express (Optional - for MongoDB management)
  mongo-express:
    image: mongo-express:1.0.2
    container_name: nestcms-mongo-express
    restart: unless-stopped
    ports:
      - "8082:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password123
      ME_CONFIG_MONGODB_URL: mongodb://admin:password123@mongodb-primary:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin123
    depends_on:
      - mongodb-primary
    networks:
      - nestcms-network

  # NestCMS Application
  nestcms-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nestcms-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      MONGO_URI: mongodb://admin:password123@mongodb-primary:27017/nestcms?authSource=admin&replicaSet=nestcms-rs
      MONGO_READ_REPLICA_1: mongodb://admin:password123@mongodb-replica1:27017/nestcms?authSource=admin&readPreference=secondary
      MONGO_READ_REPLICA_2: mongodb://admin:password123@mongodb-replica2:27017/nestcms?authSource=admin&readPreference=secondary
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: redis123
      REDIS_DB: 0
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      JWT_EXPIRES_IN: 24h
      MAX_AGGREGATION_TIME_MS: 30000
      DEFAULT_CACHE_TTL: 3600
    depends_on:
      - mongodb-primary
      - mongodb-replica1
      - mongodb-replica2
      - redis
    networks:
      - nestcms-network
    volumes:
      - ./logs:/app/logs

volumes:
  mongodb_primary_data:
    driver: local
  mongodb_replica1_data:
    driver: local
  mongodb_replica2_data:
    driver: local
  redis_data:
    driver: local

networks:
  nestcms-network:
    driver: bridge

